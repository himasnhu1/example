# Generated by Django 2.2 on 2020-10-17 07:52

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('library', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchasedSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('days', models.PositiveSmallIntegerField()),
                ('shift_timings', models.PositiveSmallIntegerField()),
                ('shift_fees', models.PositiveSmallIntegerField()),
                ('locker_charges', models.PositiveSmallIntegerField()),
                ('total_amount', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('totalOffTime', models.DurationField(default=datetime.timedelta(0))),
                ('totalRollBack', models.DurationField(default=datetime.timedelta(0))),
                ('hoursUtilized', models.DurationField(default=datetime.timedelta(0))),
                ('hoursRemain', models.DurationField(default=datetime.timedelta(0))),
                ('locker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.LibraryLocker')),
            ],
            options={
                'permissions': (('can_manage_defaulters', 'Can Manage Student Defaulters'),),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=8)),
                ('dob', models.DateField()),
                ('mobile', models.CharField(max_length=10)),
                ('alternate_mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=256)),
                ('state', models.CharField(max_length=16)),
                ('pincode', models.CharField(max_length=6)),
                ('location', models.CharField(max_length=256)),
                ('id_proof_front', models.ImageField(blank=True, null=True, upload_to='')),
                ('id_proof_rear', models.ImageField(blank=True, null=True, upload_to='')),
                ('driving_proof_front', models.ImageField(blank=True, null=True, upload_to='')),
                ('driving_proof_rear', models.ImageField(blank=True, null=True, upload_to='')),
                ('voter_proof_front', models.ImageField(blank=True, null=True, upload_to='')),
                ('voter_proof_rear', models.ImageField(blank=True, null=True, upload_to='')),
                ('passport_proof_front', models.ImageField(blank=True, null=True, upload_to='')),
                ('passport_proof_rear', models.ImageField(blank=True, null=True, upload_to='')),
                ('college_proof_front', models.ImageField(blank=True, null=True, upload_to='')),
                ('college_proof_rear', models.ImageField(blank=True, null=True, upload_to='')),
                ('verified', models.BooleanField(default=False)),
                ('add_date', models.DateField(auto_now_add=True)),
                ('active_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='active_subscription', to='student.PurchasedSubscription')),
                ('exam_preparing_for', models.ManyToManyField(to='core.ExamsPreparingFor')),
                ('higher_education', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.HigherEducation')),
                ('library_branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.LibraryBranch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('amount_paid', models.PositiveSmallIntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('invoice', models.ImageField(blank=True, null=True, upload_to='')),
                ('payment_mode', models.CharField(choices=[('Cash', 'Cash'), ('Paytm', 'Paytm'), ('UPI', 'UPI')], max_length=16)),
                ('purchased_subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.PurchasedSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='StudentOfftime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('offtime', models.DurationField(default=datetime.timedelta(0))),
                ('activeSub', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='activeSub', to='student.PurchasedSubscription')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timeslot', to='core.TimeSlot')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('in_time', models.TimeField()),
                ('out_time', models.TimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='library.LibraryBranch')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student')),
            ],
            options={
                'permissions': (('can_manage_off_time_students', 'Can Manage Off-Time Students'),),
            },
        ),
        migrations.CreateModel(
            name='StudentAbsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('purchased_subscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.PurchasedSubscription')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.TimeSlot')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student')),
            ],
        ),
        migrations.AddField(
            model_name='purchasedsubscription',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Student'),
        ),
        migrations.AddField(
            model_name='purchasedsubscription',
            name='timeslots',
            field=models.ManyToManyField(to='core.TimeSlot'),
        ),
    ]
